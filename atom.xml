<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨涛的个人博客</title>
  <subtitle>代码种子，程序小白</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-22T16:22:38.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>杨涛</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有关用three js描绘物体运动的轨迹</title>
    <link href="http://yoursite.com/2016/08/23/%E6%9C%89%E5%85%B3%E7%94%A8three-js%E6%8F%8F%E7%BB%98%E7%89%A9%E4%BD%93%E8%BF%90%E5%8A%A8%E7%9A%84%E8%BD%A8%E8%BF%B9/"/>
    <id>http://yoursite.com/2016/08/23/有关用three-js描绘物体运动的轨迹/</id>
    <published>2016-08-22T16:13:27.000Z</published>
    <updated>2016-08-22T16:22:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>最近做了有关three js 建立3D视图的项目，所以进行一点总结。</p>
<p>首先，我应当说明，这些项目是我不断看文档，看API，看例子，然后照猫画虎搞出来的，所以首先应当感谢的是three js的官网:<a href="http://thrrejs.org" target="_blank" rel="external">http://thrrejs.org</a></p>
<h2 id="不重复造轮子的原则是对的，但我们不应当失去造轮子的能力。"><a href="#不重复造轮子的原则是对的，但我们不应当失去造轮子的能力。" class="headerlink" title="不重复造轮子的原则是对的，但我们不应当失去造轮子的能力。"></a>不重复造轮子的原则是对的，但我们不应当失去造轮子的能力。</h2><p>在three js项目中，必须有如下几个元素：</p>
<ul>
<li><p>var scene = new THREE.Scene();//场景</p>
</li>
<li><p>var camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );//视角</p>
</li>
<li><p>var renderer = new THREE.WebGLRenderer(); //渲染器</p>
</li>
<li><p>renderer.setSize( window.innerWidth, window.innerHeight ); 渲染器参数设置</p>
</li>
<li><p>document.body.appendChild( renderer.domElement );使渲染器在html网页中生效</p>
</li>
</ul>
<p>这三种是使画面呈现出来最基本的要素，但仅仅只是有了白纸，眼睛，画笔，并不构成作品，我们需要在白纸上加点什么，以一个正方体为例。</p>
<ul>
<li><p>var geometry = new THREE.BoxGeometry( 1, 1, 1 ); 几何形状材质的决定</p>
</li>
<li><p>var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );外部纹理</p>
</li>
<li><p>var cube = new THREE.Mesh( geometry, material ); 构建一个正方体</p>
</li>
<li><p>scene.add( cube ); 将正方体加入场景中</p>
</li>
<li><p>camera.position.z = 5;决定正方体位置的z坐标、</p>
</li>
</ul>
<p>注意：以上5条代码非常重要！！！所有对象的添加与绘制，都与上面的例子是差不多的模样。</p>
<p>几乎所有的动画效果与上方例子不同的地方仅在于：</p>
<p>几何形状不同或依某个函数变化；</p>
<p>外部纹理不同或依某个函数变化；</p>
<p>构建的时机与加入场景的时机不同或依某个函数变化；</p>
<p>位置不同或依某个函数变化；</p>
<p>所以上方正方体的例子就是动画最原始的模样！</p>
<p>当你画完了，需要让它们动起来的时候，就需要如下的函数：</p>
<ul>
<li><p>function render() {</p>
</li>
<li><p>requestAnimationFrame( render ); 不断地执行一个叫“render”的函数，等于无限调用自己</p>
</li>
<li><p>renderer.render( scene, camera );渲染器启动，渲染场景与视角</p>
</li>
<li><p>}</p>
</li>
</ul>
<p>render();开始无限调用</p>
<p>渲染器运行函数通过不断地调用自己，使得动画一直存在，假如你把那个无限调用干掉的话，动画将是昙花一现。</p>
<p>我将述说一个需求：使一个物体（假设是小球）不断地运动，并且显示它运动的轨迹。</p>
<p>我愿意告诉你们我最终的想法与做法：</p>
<p>像上方一样，建立三要素，建立一个小球，</p>
<p>【1】使它的position位置的三个坐标都加上一个 -10~10之间的随机数，（发挥你的数学才能让球按一定规律运动）</p>
<p>【2】步骤【1】要在render函数中实现，这样能够使小球不断地运动。（因为每次渲染小球的坐标都在变）</p>
<p>【3】必须建立“线”这一对象，用以描绘运动轨迹。</p>
<p>【4】有关线的建立：</p>
<p>由于是绘制轨迹，应当尽可能地准确而平滑，假如我们直接使用“线”结构，最终只能搞出一堆直线的连接，而three js中有样条曲线的结构（有很多种曲线结构，感兴趣地可以试试别的），使用样条曲线能构造出平滑的曲线，例子如下：</p>
<ul>
<li><p>var curve = new THREE.SplineCurve3(</p>
</li>
<li><p>[new THREE.Vector3( -10, 0, 10 ),
　</p>
</li>
<li>new THREE.Vector3( -5, 5, 5 ),
　</li>
<li>new THREE.Vector3( 0, 0, 0 ),
　</li>
<li>new THREE.Vector3( 5, -5, 5 ), //设置线经过的坐标
　</li>
<li>new THREE.Vector3( 10, 0, 10 ) ]</li>
</ul>
<p>);</p>
<ul>
<li><p>var path = new THREE.Path( curve.getPoints( 50 ) ); 决定画线的精度，学过微积分的都知道，这就是不断趋近</p>
</li>
<li><p>var geometry = path.createPointsGeometry( 50 ); 将坐标数组包装入几何性质中</p>
</li>
<li><p>var material = new THREE.LineBasicMaterial( { color : 0xff0000 } ); 纹理，（这里设置的是颜色）</p>
</li>
<li><p>var splineObject = new THREE.Line( geometry, material );//画线</p>
</li>
<li><p>scene.add( splineObject );将对象加入场景</p>
</li>
</ul>
<p>而当我们将变化的小球坐标不断加入到数组中，再依照上面的方法，自然而然地就画出了小球的轨迹。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;p&gt;最近做了有关three js 建立3D视图的项目，所以进行一点总结。&lt;/p&gt;
&lt;p&gt;首先，我应当说明，这些项目是我不断看文档，看API，看例
    
    </summary>
    
    
      <category term="前端，js" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%EF%BC%8Cjs/"/>
    
  </entry>
  
  <entry>
    <title>这是我的第一篇博文</title>
    <link href="http://yoursite.com/2016/08/22/first-post/"/>
    <id>http://yoursite.com/2016/08/22/first-post/</id>
    <published>2016-08-22T15:21:09.000Z</published>
    <updated>2016-08-22T16:10:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="博客从此处开始"><a href="#博客从此处开始" class="headerlink" title="博客从此处开始"></a>博客从此处开始</h3><p>哎！我的博客就这样开通了，也没什么话可说，如果你喜欢的话，就常来逛逛吧，不止有技术方面的事哦！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;博客从此处开始&quot;&gt;&lt;a href=&quot;#博客从此处开始&quot; class=&quot;headerlink&quot; title=&quot;博客从此处开始&quot;&gt;&lt;/a&gt;博客从此处开始&lt;/h3&gt;&lt;p&gt;哎！我的博客就这样开通了，也没什么话可说，如果你喜欢的话，就常来逛逛吧，不止有技术方面的事哦！&lt;/p
    
    </summary>
    
    
      <category term="博客，文章" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%EF%BC%8C%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/08/22/hello-world/"/>
    <id>http://yoursite.com/2016/08/22/hello-world/</id>
    <published>2016-08-22T14:41:31.590Z</published>
    <updated>2016-08-22T14:41:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
